<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Add Video</title>
</head>
<body class="add-video">
<div class="container">
    <h1>Add Video</h1>
    <form id="uploadForm" enctype="multipart/form-data">
        <label for="description">Titre:</label>
        <textarea id="description" name="description" required></textarea><br><br>
        <label for="thumbnail">Thumbnail File:</label>
        <input type="file" id="thumbnail" name="thumbnail" required><br><br>
        <label for="file">Video File:</label>
        <input type="file" id="file" name="file" required><br><br>
        <button type="submit">Add Video</button>
    </form>
</div>

<script>
    document.getElementById('uploadForm').addEventListener('submit', async (event) => {
        event.preventDefault();

        const description = document.getElementById('description').value;
        const thumbnailFile = document.getElementById('thumbnail').files[0];
        const videoFile = document.getElementById('file').files[0];

        if (!description || !thumbnailFile || !videoFile) {
            alert('All fields are required');
            return;
        }

        try {
            // Upload video file
            const videoResponse = await fetch('/upload', {
                method: 'POST',
                body: videoFile,
                headers: {
                    'x-file-name': videoFile.name,
                    'x-file-description': description,
                },
            });

            if (!videoResponse.ok) {
                throw new Error('Error uploading video file');
            }

            const videoData = await videoResponse.json();
            const videoFileName = videoData.fileName;

            // Upload thumbnail file
            const thumbnailResponse = await fetch('/upload', {
                method: 'POST',
                body: thumbnailFile,
                headers: {
                    'x-file-name': thumbnailFile.name,
                    'x-file-description': description,
                },
            });

            if (!thumbnailResponse.ok) {
                throw new Error('Error uploading thumbnail file');
            }

            const thumbnailData = await thumbnailResponse.json();
            const thumbnailFileName = thumbnailData.fileName;

            // Add video data to the database
            if(videoResponse.ok && thumbnailResponse.ok) {
                const addVideoDataResponse = await fetch('/add-video-data', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        fileName: videoFileName,
                        thumbnailFileName: thumbnailFileName,
                        description: description
                    }),
                });


                if (!addVideoDataResponse.ok) {
                    throw new Error('Error adding video data to the database');
                }
            }

            alert('Files uploaded successfully and data added to the database');
        } catch (error) {
            console.error('Error uploading files:', error);
            alert('Error uploading files');
        }
    });
</script>
</body>
</html>
